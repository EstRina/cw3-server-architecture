{
	"info": {
		"_postman_id": "2bd5b4d3-6f47-4172-a2c0-5b366727775f",
		"name": "User API",
		"description": "Collection to test the User API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39368943"
	},
	"item": [
		{
			"name": "Get All Users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Retrieves all users. Returns 200 with an array of users."
			},
			"response": []
		},
		{
			"name": "Add User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": 1, \"userName\": \"Bond\"}"
				},
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Adds a new user. Expects id and userName in the body. Returns 201 on success, 409 if user exists, 400 for invalid data."
			},
			"response": []
		},
		{
			"name": "Get User by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"1"
					]
				},
				"description": "Retrieves a user by ID. Returns 200 with user data, 404 if not found, 400 if no ID provided."
			},
			"response": []
		},
		{
			"name": "Update User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": 1, \"userName\": \"BondUpdated\"}"
				},
				"url": {
					"raw": "http://localhost:3000/api/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"1"
					]
				},
				"description": "Updates a user by ID. Expects id and userName in the body, ID must match URL. Returns 200 on success, 400 for invalid data, 404 if not found."
			},
			"response": []
		},
		{
			"name": "Delete User",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"1"
					]
				},
				"description": "Deletes a user by ID. Returns 200 with deleted user data, 404 if not found, 400 if no ID provided."
			},
			"response": []
		}
	]
}